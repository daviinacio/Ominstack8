{"version":3,"sources":["services/api.js","pages/Login.js","pages/Main.js","routes.js","App.js","index.js","assets/logo.svg","assets/like.svg","assets/dislike.svg","assets/itsamatch.png"],"names":["api","axios","create","baseURL","Login","history","useState","username","setUsername","e","a","preventDefault","post","response","_id","data","console","log","push","className","onSubmit","src","logo","alt","placeholder","value","onChange","target","type","Main","match","users","setUsers","matchDev","setMatchDev","id","headers","user","params","filter","useEffect","get","loadUsers","io","query","on","dev","to","length","map","key","avatar","name","href","without","rel","bio","onClick","handleDislike","dislike","handleLike","like","itsamatch","Routes","basename","path","exact","component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ea12f9e7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://omnistack8-di.herokuapp.com/'\n});\n\nexport default api;\n","import React, { useState } from 'react';\n// Importação de um arquivo que não precisa de um nome\nimport './Login.css';\n\nimport api from '../services/api';\n\nimport logo from '../assets/logo.svg';\n\n// Para passar argumentos para um componente basta\n// Passar as como propridade do componente. Ex: <Login prop1=\"p1\" prop2=\"p2\" />\n// Existem duas formas de obter os values\n// 1) Pela variável props\n//      function Login(props){\n//          props.prop1;\n//          props.prop2;\n//          // ou\n//          const { prop1, prop2 } = props;\n//      }\n//\n// 2) Pela desestruturação\n//      function Login({ prop1, prop2 }){\n//          \n//      }\n\n// Todas as rotas automaticamente herdam uma propriedade chamada history\n// function Login({ history }) { ... }\n\n// Os três conceitor do React\n// Componente, Estado e Propriedades\n\n// Um componente é uma função\n// O componente também pode ser exportado diretamente\nexport default function Login({ history }){\n    // Conceito de estado\n    // O estado de um componente é todo e qualquer informação que o componente vai manipular\n    const [ username, setUsername ] = useState('');\n\n\n    // Uma função pode ser passada de duas formas para o html\n    // Diretamente -> { e => ... }\n    // Extermanemte -> {nomeDaFunção}\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        // Como em username: username as duas variáveis tem o mesmo nome\n        // Mode se deixar apenas 'username'. É um recurso de short syntaz.\n        const response = await api.post('/devs', {\n            username,\n        });\n\n        const { _id } = response.data;\n\n        console.log(_id);\n\n        history.push(`/dev/${_id}`);\n    }\n    \n\n    // Precisa retornar um HTML\n    // Se o HTML tiver mais de uma linha, precisa colocar entre '()'\n    return (\n        // class é uma palavra reservada do javascript para declarar classes\n        // Então o recomendado é utilizar className\n        <div className=\"login-container\">\n            <form onSubmit={handleSubmit}>\n                <img src={logo} alt=\"Tindev\"/>\n                <input\n                    placeholder=\"Digite seu usuário no GitHub\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                />\n                <button type=\"submit\">Entrar</button>\n            </form>\n            \n        </div>\n    );\n}\n\n// Exportar o componente\n//export default Login;","import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\n// Serve para redirecionar dentro da aplicação\nimport { Link } from 'react-router-dom';\n\n// StyleSheet\nimport './Main.css';\n\nimport api from '../services/api';\n\n// Assets\nimport logo from '../assets/logo.svg';\nimport like from '../assets/like.svg';\nimport dislike from '../assets/dislike.svg';\nimport itsamatch from '../assets/itsamatch.png';\n\n// O react-router-dom inclue uma propriedade no componente chamado 'match'\n// Dentro desse 'match' tem todos os parametros que foram passados para essa rota\n// Para obter os parametros basta usar Main({ match }){ match.params.prop; }\nexport default function Main({ match }){\n    // Toda vez que for necessário uma variável que o componente possa ter acesso,\n    // se usa o useState(<Valor inicial>)\n    const [ users, setUsers ] = useState([]);\n    const [ matchDev, setMatchDev ] = useState(null);\n\n    // Recebe 2 parametros: \n    //      Função que quer executar (pode ser uma arrow function. () => {})\n    //      Quando quer executar a função. Array de dependências do useEffecs.\n    //          A função é chamada toda vez que alguma variável do array é alterada.\n    //          Se o array estiver vazio, a função será executada apenas uma vez.\n\n    // Executa toda vez que o parâmetro id for alterado\n    useEffect(() => {\n        async function loadUsers(){\n            const response = await api.get('/devs', {\n                headers: {\n                    user: match.params.id\n                }\n            });\n\n            // Toda vez que o valor de um estado é alterado\n            // Uma nova renderização é gerada pelo react\n            // E todo o HTML é renderizado do zero com os novos dados.\n            setUsers(response.data);\n\n            console.log(response.data);\n        }\n\n        loadUsers();\n    },[match.params.id]);\n\n    useEffect(() => {\n        const socket = io('https://omnistack8-di.herokuapp.com/', {\n            // Parametros adicionais que se pode enviar na conexão\n            query: {\n                user: match.params.id\n            }\n        });\n\n        // Escuta o evento match e recebe o dev\n        socket.on('match', dev => {\n            setMatchDev(dev);\n        })\n\n        /*socket.on('world', message => {\n            console.log(message);\n        });\n\n        setTimeout(() => {\n            // Emite uma mensagem do tipo 'hello' para o backend\n            socket.emit('hello', {\n                message: 'Hello world'\n            })\n        }, 3000);*/\n\n    }, [match.params.id]);\n\n    // Toda ação gerada a partir de uma interação do usuário é chamada de handle\n    async function handleDislike(id){\n        // No método post, o segundo parametro é o corpo da requisição.\n        // Para passar os paremetros, deve se usar o terceiro parametro da função.\n        api.post(`/devs/${id}/dislikes`, null, {\n            headers: {\n                user: match.params.id\n            }\n        });\n\n        console.log(`dislike: ${id}`);\n\n        // Modificando a lista de usuários filtrando apenas usuários cujo o id seja diferente.\n        // A variável user nunca pode ser alterada diretamente, apenas com o setUsers\n        setUsers(users.filter(user => user._id !== id));\n    }\n\n    async function handleLike(id){\n        api.post(`/devs/${id}/likes`, null, {\n            headers: {\n                user: match.params.id\n            }\n        });\n\n        setUsers(users.filter(user => user._id !== id));\n\n        console.log(`like: ${id}`);\n    }\n\n    //return <h1>{match.params.id}</h1>;\n    return (\n        <div className=\"main-container\">\n            <Link to=\"/\">\n                <img src={logo} alt=\"tindev\" />\n            </Link>\n            {/* Um if ternário sendo utilizado para mostrar uma mensagem se estiver vazio */}\n            { users.length > 0 ? (\n                <ul>\n                {users.map(user => (\n                    // O react precisa de uma key unica para gerencias melhor a lista\n                    // Sem a key, todos os elementos serão recarregado quando holver alterações\n                    // Inserir uma key, melhora consideravelmente a performance\n                    <li key={user._id}>\n                        <img src={user.avatar} alt={user.name}/>\n                        <footer>\n                            <a href={`http://github.com/${user.user}`} target=\"_blank\" \n                                    without=\"true\" rel=\"noopener noreferrer\">\n                                <strong>{user.name}</strong>\n                            </a>\n                            <p>{user.bio}</p>\n                        </footer>\n                        <div className=\"buttons\">\n                            {/* Quando o react encontra uma função com '()', \n                                ele entende que deve executar e usar o valor do retorno.\n                                Para executar a função apenas quando o evento for chamado,\n                                deve ser declarado uma função por volta. Essa função pode\n                                ser uma arrow function.\n                            */}\n                            <button type=\"button\" onClick={() => handleDislike(user._id)}>\n                                <img src={dislike} alt=\"dislike\" />\n                            </button>\n                            <button type=\"button\" onClick={() => handleLike(user._id)}>\n                                <img src={like} alt=\"like\" />\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            ) : (\n                <div className=\"empty\">Acabou :(</div>\n            )}\n\n            {/* // Mostra a tela de match se 'matchDev' for qualquer valor válido (não falsy) */}\n            { matchDev && (\n                <div className=\"match-container\">\n                    <img src={itsamatch} alt=\"It's a match\" />\n                    <img className=\"avatar\" src={matchDev.avatar} alt=\"\" />\n                    <strong>{matchDev.name}</strong>\n                    <p>{matchDev.bio}</p>\n                    \n                    <button onClick={() => { setMatchDev(null); }}>Fechar</button>\n                </div>\n            ) }\n        </div>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Main from './pages/Main';\n\nexport default function Routes(){\n\n    // O exact força o router a indentificar apenas se a rota for exatamente igual\n    return (\n        <BrowserRouter basename=\"/Omnistack8\">\n            <Route path=\"/\" exact component={Login}/>\n            <Route path=\"/dev/:id\" component={Main}/>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes'\n\n\nfunction App() {\n\n  return(<Routes />);\n  /*return (\n    <h1>Olá marilene</h1>\n    \n  );*/\n}\n\nexport default App;\n","// Biblioteca do react\nimport React from 'react';\n// Biblioteca do react para trabalhar com o DOM do navegador\nimport ReactDOM from 'react-dom';\n\n//import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\n// Renderiza alguma coisa dentro da div 'root'\n// No lugar de <App /> pode conter qualquer HTML\n// Cadastra qual é o componente global/principal da aplicação\n// Geralmente é rodado apenas uma vez\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6a01ceef.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.542059a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/dislike.d4ec34e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/itsamatch.21c10b26.png\";"],"sourceRoot":""}